<h1>Graph Editor</h1>
<div id="lodqa-pgp" class="hidden"><%= @pgp.to_json %></div>

<div class="node-editor">
    <div class="input-node">
        <input class="label" placeholder="New Node"></input>
        <button class="button" disabled title="create"><i class="fa fa-plus"></i></button> to be connected as
        <label>
            <i>chain</i><input checked/ name="create-edge" type="radio" value="chain"></label> or
        <label>
            <i>star</i><input name="create-edge" type="radio" value="star"/></label>.
    </div>
    <div class="edit-edge hidden">
        <label>Delete Edge</label>
        <button class="delete-button" title="delete"><i class="fa fa-trash-o"></i></button>
    </div>
    <span class="warn"></span>
</div>
<div class="jsPlumb-container"></div>
<div class="pgp hidden"></div>

<h1>Term Finder</h1>
<label for="target">Target: </label>
<select name="target" id="target">
<% settings.target_names.each do |n| %>
    <% t = settings.targets.find{|t| t["name"]==n} %>
    <% id = t["id"] %>
    <option value="<%= settings.target_db + '/' + id.to_s + '.json' %>"><%= n %></option>
<% end %>
</select>

<div class="table">
    <div class="node-table"></div>
</div>
<div class="mappings hidden"></div>

<script src="js/vender/jsplumb/dist/js/dom.jsPlumb-1.7.8.js"></script>
<script src="js/vender/js-polyfills/keyboard.js"></script>
<script src="js/vender/grapheditor/index.js"></script>
<script type="text/javascript">
    var editor = graphEditor('/termfinder')
    editor.setDictionaryUrl('<%= @dictionary_url %>')
    editor.addPgp(JSON.parse(document.querySelector('#lodqa-pgp').innerHTML))
    selector = document.querySelector('#target');
    selector.addEventListener('change', function() {
        target    = selector.options[selector.selectedIndex].text;
        targetUrl = selector.value;
        changeTarget(target, targetUrl)
    });

    function changeTarget(label, targetUrl) {
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function() {
            if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
                var target = JSON.parse(xmlHttp.responseText);

                var dicUrl = target["dictionary_url"];
                editor.setDictionaryUrl(dicUrl);

                var sample_queries = target["sample_queries"];
                if (sample_queries) {
                    $("#sample_queries").html("<h1>Sample queries for " + label + "</h1><ul><li><a>" + target.sample_queries.join("</a></li><li><a>") + "</a></li></ul>");
                   setQueriesCopiable();
                } else {
                    $("#sample_queries").html('');
                }
            }
        }
        xmlHttp.open("GET", targetUrl, true); // true for asynchronous 
        xmlHttp.send(null);       
    }

    function setQueriesCopiable () {
        $('#sample_queries a').on('click', function() {
            $("#query").val($(this).text());
        });     
    }

    document.addEventListener('DOMContentLoaded', function() {
        defaultTarget    = document.querySelector('#target').options[0].text;
        defaultTargetUrl = document.querySelector('#target').options[0].value;
        changeTarget(defaultTarget, defaultTargetUrl);
    }, false);
</script>
